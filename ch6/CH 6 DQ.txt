1 DISPLAY FIRST_NAME , DEPARTMENT_NAME
SELECT FIRST_NAME , NVL(DEPARTMENT_NAME,'-') AA FROM
EMPLOYEES LEFT JOIN DEPARTMENTS ON (EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID);

2 DISPLAY FIRST_NAME AND HIS/HER DEPARTMENTAL COLLEGUE NAME (REMOVE ALL TYPES OF DUPLICATIONS)
SELECT DISTINCT P.FIRST_NAME PEPOLE , C.FIRST_NAME  COLLEGUE FROM EMPLOYEES P
JOIN EMPLOYEES C ON ((C.DEPARTMENT_ID = P.DEPARTMENT_ID) AND (C.EMPLOYEE_ID > P.EMPLOYEE_ID));


3 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

4 DISPLAY DEPARTMENT_NAME , CITY
 SELECT  DEPARTMENT_NAME , CITY
 FROM DEPARTMENTS
 JOIN LOCATIONS USING (LOCATION_ID);

5 DISPLAY FIRST_NAME , JOB_ID , JOB_TITLE
SELECT  FIRST_NAME , JOB_ID , JOB_TITLE
FROM EMPLOYEES E JOIN JOBS USING(JOB_ID);

6 DISPLAY DEPARTMENT_NAME , CITY, STATE_PROVINCE, COUNTRY_NAME
SELECT  DEPARTMENT_NAME , CITY, STATE_PROVINCE, COUNTRY_NAME
FROM DEPARTMENTS JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID) ;

7 DISPLAY FIRST_NAME , REGION_NAME
SELECT FIRST_NAME , REGION_NAME FROM EMPLOYEES 
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING(REGION_ID);

8 DISPLAY DEPARTMENT_NAME , REGION_NAME
SELECT DEPARTMENT_NAME , REGION_NAME FROM 
DEPARTMENTS
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

9 DISPLAY THOSE REGION_NAME IN WHICH NO LOCATION IS YET FIXED
SELECT * FROM LOCATIONS RIGHT JOIN COUNTRIES ON (LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID)
RIGHT JOIN REGIONS USING (REGION_ID)
WHERE LOCATIONS.LOCATION_ID IS NULL;

10 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL 
SELECT FIRST_NAME, SALARY, GRADE_LEVEL
FROM EMPLOYEES
LEFT JOIN JOB_GRADES
  ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

11 DISPLAY FIRST_NAME , SALARY AND HIS/HER MANAGERIAL COLLEGUE NAME ,SALARY AND DIFFERENCE OF THEIR SALARY
SELECT E.FIRST_NAME , E.SALARY , M.FIRST_NAME "MANAGERIA NAME"  , M.SALARY , (M.SALARY - E.SALARY)  "DIFFERENCE"
FROM EMPLOYEES E JOIN EMPLOYEES M ON (E.MANAGER_ID = M.EMPLOYEE_ID);

12 DISPLAY ALL COMBINATIONS OF CITY AND COUNTRY_NAME
SELECT CITY , COUNTRY_NAME FROM LOCATIONS JOIN COUNTRIES USING(COUNTRY_ID);

13 DISPLAY ALL COMBINATIONS DEPARTMENT_NAME AND CITY
SELECT DEPARTMENT_NAME , CITY FROM DEPARTMENTS JOIN LOCATIONS USING (LOCATION_ID);

14 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL
SELECT FIRST_NAME , SALARY , GRADE_LEVEL FROM
EMPLOYEES JOIN JOB_GRADES ON (sALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL);

15 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME
SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME FROM
EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
JOIN LOCATIONS USING(LOCATION_ID)
JOIN COUNTRIES USING(COUNTRY_ID);

16 DISPLAY EMPLOYEE_NAME AND HIS MANAGER_NAME
SELECT E.FIRST_NAME "E_NAME" , M.FIRST_NAME "M_NAME"
FROM EMPLOYEES E JOIN EMPLOYEES M ON (M.EMPLOYEE_ID = E.MANAGER_ID);

17 DISPLAY COUNTRY_NAME , DEPARTMENT_ANME , REGION_NAME , CITY


18 DISPLAY EMPLOYEE_NAME , SALARY AND HIS/HER MANAGER'S NAME AND SALARY

19 DISPLAY CITY , REGION_NAME
 
20 DISPLAY EMPLOYEE NAME , JOB_TITLE AND HIS/HER MANAGER'S NAME AND JOB_TITLE

21 DISPLAY FIRST_NAME WHOSE DEPARTMENT_ID IS NOT FIXED YET

22 DISPLAY DEPARTMENT_NAME , REGION_NAME
 
23 DISPLAY FIRST_NAME , JOB_TITLE , SALARY , GRADE_LEVEL , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
SELECT FIRST_NAME , JOB_TITLE , SALARY , GRADE_LEVEL , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
FROM EMPLOYEES
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID)
JOIN JOBS USING (JOB_ID)
JOIN JOB_GRADES ON (SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL);

24 DISPLAY THOSE WHO GETS HIGHER SALARY THAN 'Abel'
 SELECT T.FIRST_NAME "HIGHER SALARY THAN Abel", T.LAST_NAME FROM
 EMPLOYEES E JOIN EMPLOYEES T on (T.SALARY> E.SALARY) WHERE E.LAST_NAME = 'Abel';
 
25 DISPLAY FIRST_NAME , COUNTRY_NAME


26 DISPLAY THOSE WHO WERE HIRED BEFORE 'Hartstein'
SELECT T.FIRST_NAME , T.LAST_NAME FROM EMPLOYEES E
JOIN EMPLOYEES T ON (E.HIRE_DATE > T.HIRE_DATE )
WHERE E.LAST_NAME = 'Hartstein';

27 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY

28 DISPLAY EMPLOYEE_NAME , SALARY , GRADE_LEVEL AND HIS/HER MANAGER'S NAME , SALARY , GRADE_LEVEL
SELECT E.FIRST_NAME EMPLOYEE_NAME , E.SALARY , EG.GRADE_LEVEL ,
M.FIRST_NAME , M.SALARY ,  MG.GRADE_LEVEL 
FROM EMPLOYEES E 
JOIN EMPLOYEES M (E.MANAGER_ID = M.EMPLOYEE_ID)
JOIN 

29 DISPLAY DEPARTMENT_NAME IN WHICH NO ONE IS HIRED

30 DISPLAY FIRST_NAME , CITY

31 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'USING' AND 'ON' , ONE BY ONE)


32 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'ON' AND 'USING' , ONE BY ONE)

33 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'USING' AND 'ON' , ONE BY ONE) ( USE TABLE RIGHT TO LEFT I.E. R C L D E )

34 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'ON' AND 'USING' , ONE BY ONE) ( USE TABLE RIGHT TO LEFT I.E. R C L D E )

35 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'USING' AND 'ON' , ONE BY ONE) ( USE TABLES IN THIS ORDER L D C E R )

36 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'ON' AND 'USING' , ONE BY ONE) ( USE TABLES IN THIS ORDER L D C E R )

37 DISPLAY FIRST_NAME , DEPARTMENT_ID , LOCATION_ID , COUNTRY_ID , REGION_NAME (SOLVE 'USING' AND 'ON' , ONE BY ONE) ( USE TABLES IN THIS ORDER C L R D E )

