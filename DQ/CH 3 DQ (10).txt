1. DISPLAY FIRST NAME AND FIRST_NAME WITH LENGTH 6 OR MORE. DISPLAY FIRST TWO CHARACTERS IN SMALL CASE, LAST TWO CHARACTERS IN CAPITAL AND ALL REMAINING CHARACTERS IN CAMEL CASE.
-> SELECT FIRST_NAME , LOWER(SUBSTR(FIRST_NAME,1,2)) || INITCAP(SUBSTR(FIRST_NAME,3,LENGTH(FIRST_NAME) - 4)) || UPPER(SUBSTR(FIRST_NAME,-2)) "FIRST NAME"
   FROM EMPLOYEES WHERE LENGTH(FIRST_NAME) >= 6;

2. DISPLAY LAST_NAME AND ANOTHER LAST_NAME COLUMN WITH ALL VOWELS IN CAPITAL AND CONSONENTS IN SMALL CASE.
->SELECT LAST_NAME , TRANSLATE(LOWER(LAST_NAME),'aeiou','AEIOU') FROM EMPLOYEES;

3. DISPLAY FIRST_NAME AND ANOTHER COLUMN, IT SHOULD DISPLAY * FOR EACH CONSONENT AND + FOR EACH VOWELS.
->SELECT FIRST_NAME , TRANSLATE(UPPER(FIRST_NAME),'AEIOUQWRTYPLKJHGFDSZXCVBNM','+++++*********************') FROM EMPLOYEES;

4. DISPLAY EMAIL AND IDENTICAL RESULT OF EMAIL COLUMN USING FIRST_NAME AND LAST_NAME COLUMNS. (DON'T USE ||)
->SELECT EMAIL , FIRST_NAME || '.' || LAST_NAME || '@gmail.com' "MAIL" FROM EMPLOYEES;

5. DISPLAY FIRST_NAME AND OTHER COLUMN WHICH WILL REMOVE ALL VOWELS FROM RIGHT AND ALL CONSONENTS FROM LEFT.
->SELECT FIRST_NAME , LTRIM(RTRIM(UPPER(FIRST_NAME),'AEIOU'),'QWRTYPLKJHGFDSZXCVBNM') FROM EMPLOYEES;
----------------------------
6. DISPLAY FIRST_NAME AND OTHER COLUMN BY REMOVING ALL VOWELS.
->SELECT FIRST_NAME , TRANSLATE(UPPER(FIRST_NAME),'#AEIOU','#') FROM EMPLOYEES;

7. DISPLAY LAST_NAME AND OTHER COLUMN. REPLACE i WITH ee, u WITH oo.
->SELECT LAST_NAME , REPLACE(REPLACE(LOWER(LAST_NAME),'i','ee'),'u','oo') FROM EMPLOYEES;

8. DISPLAY THOSE FIRST_NAME WHICH HAS ATLEAST 3 VOWELS.
->SELECT FIRST_NAME FROM EMPLOYEES WHERE LENGTH(TRANSLATE(UPPER(FIRST_NAME),'#QWRTYPLKJHGFDSZXCVBNM','#')) >= 3 ;

9. DISPLAY ALL FIRST_NAME AND LAST_NAME IF ANY ONE OF IT HAS 2 OR MORE VOWELS.
-> SELECT FIRST_NAME , LAST_NAME FROM EMPLOYEES WHERE LENGTH(TRANSLATE(UPPER(FIRST_NAME),'#QWRTYPLKJHGFDSZXCVBNM','#')) >= 2 AND 
LENGTH(TRANSLATE(UPPER(FIRST_NAME),'#QWRTYPLKJHGFDSZXCVBNM','#')) >= 2 ;

10. DISPLAY SALARY AND BONUS. BONUS IS 33.36% OF ANNUAL SALARY. DISPLAY BONUS BY TRUNCATING THE VALUE IN THOUSANDS AND ROUNDING THE VALUE IN HUNDREDS.
->  SELECT SALARY , TRUNC((SALARY * 12)) + ROUND((SALARY*33.36)/100)  "BONUS" FROM EMPLOYEES;
----------------------------------------------------------------
11. COMPANY PAYS IN NEXT MONTH ON FIRST WEDNESDAY AFTER DATE 10. DISPLAY FIRST PAYMENT DATE.
-> SELECT HIRE_DATE , NEXT_DAY(LAST_DAY(HIRE_DATE)+10,'WED') FROM EMPLOYEES;
----------------------------------------------
12. COMPANY PAYS IN NEXT MONTH ON FIRST WEDNESDAY AFTER DATE 10. DISPLAY LAST PAYMENT DATE.
-> SELECT HIRE_DATE , NEXT_DAY(LAST_DAY(HIRE_DATE)+10,'WED') FROM EMPLOYEES ORDER BY 2 DESC;

13. COMPANY PAYS IN NEXT MONTH ON FIRST WEDNESDAY AFTER DATE 10. DISPLAY NEXT PAYMENT DATE.
-> SELECT HIRE_DATE, NEXT_DAY(ADD_MONTHS(LAST_DAY(HIRE_DATE), 1) + 10, 'WED') AS NEXT_PAYMENT_DATE FROM EMPLOYEES;

14. COMPANY PAYS FORTNIGHTLY (EVERY 15 DAYS, ON 1ST OR ON 16TH.) DISPLAY FIRST PAYMENT DATE.
-> SELECT HIRE_DATE, CASE WHEN TO_CHAR(HIRE_DATE, 'DD') <= 15 
    THEN TRUNC(HIRE_DATE, 'MONTH') + 15 
    ELSE ADD_MONTHS(TRUNC(HIRE_DATE, 'MONTH'), 1) + 0 
    END AS FIRST_PAYMENT_DATE FROM EMPLOYEES;

    SELECT HIRE_DATE, CASE WHEN TO_CHAR(HIRE_DATE, 'DD') <= 15
    THEN TRUNC(HIRE_DATE, 'MONTH') + 15
    ELSE ADD_MONTHS(TRUNC(HIRE_DATE, 'MONTH'), 1) + 0
    END AS FIRST_PAYMENT_DATE FROM EMPLOYEES;

15. DISPLAY FIRST_NAME , SALARY , BONUS , LAST 3 DIGITS OF BONUS. BONUS = ANNUAL SALARY * .4589
-> SELECT FIRST_NAME , SALARY , SALARY * 12 * .4589 "BONUS" , MOD(SALARY * 12 * .4589,1000) FROM EMPLOYEES;

16. DISPLAY FIRST_NAME , SALARY , NEW_TRUNC_SALARY , NEW_ROUND_SALARY AND EXTRA COLUMN, WHICH SHOULD DISPLAY EQUAL IF 3RD AND 4TH COLUUMNS HAVE SAME VALUES. (TRUNC AND ROUND SALARIES IN THOUSANDS)
->

17. DISPLAY FIRST_NAME , SALARY , SALARY * 1.1437 (NEW SALARY) AND ONLY FRACTIONAL PART OF NEW SALARY. (DON'T USE TRUNC OR ROUND FUNCTION)
->SELECT FIRST_NAME , FLOOR(SALARY*1.1437) "NEW SALARY" , MOD(SALARY*1.1437,1) "FRACTIONAL PART" FROM EMPLOYEES;

18. DISPLAY FIRST_NAME , SALARY , SALARY * 1.1437 (NEW SALARY) , TRUNC NEW SALARY IN HUNDREDS (USING TRUNC FUNCTION) , TRUNC NEW SALARY IN HUNDREDS (WITHOUT USING TRUNC FUNCTION).
->SELECT FIRST_NAME , SALARY , SALARY * 1.1437 "NEW SALARY" , TRUNC(SALARY*1.1437,-2) "TRUNCATED NEW SALARY" , FLOOR(SALARY*1.1437)-FLOOR(FLOOR(SALARY*1.1437)/100)*100 "TRUNCATED NEW SALARY" FROM EMPLOYEES;

19. COMPANY PAYS ON EACH THURSDAY, DISPLAY FIRST_NAME , SYSDATE , HIRE_DATE , FIRST_SALARY_DATE WITH DAY NAME.
->SELECT FIRST_NAME,SYSDATE, HIRE_DATE, NEXT_DAY(HIRE_DATE, 'THU') AS FIRST_SALARY_DATE,TO_CHAR(NEXT_DAY(HIRE_DATE, 'THU'), 'DAY') AS DAY_NAME FROM EMPLOYEES;

20. COMPANY PAYS ON EACH WEDNESDAY, DISPLAY LAST_NAME , HIRE_DATE , SYSDATE , NEXT_DAY(SYSDATE - 7, 'WED') AS LAST_SALARY_DATE, TO_CHAR(NEXT_DAY(SYSDATE - 7, 'WED'), 'DAY') AS DAY_NAME
-> SELECT LAST_NAME, HIRE_DATE, SYSDATE, NEXT_DAY(SYSDATE - 7, 'WED') AS LAST_SALARY_DATE, TO_CHAR(NEXT_DAY(SYSDATE - 7, 'WED'), 'DAY') AS DAY_NAME FROM EMPLOYEES;

21. COMPANY PAYS ON LAST DATE OF EACH MONTH, DISPLAY DATE OF LAST SALARY RECEIVED.
-> SELECT LAST_DAY(HIRE_DATE) LAST_SALARY_RECEIVED FROM EMPLOYEES;

22. COMPANY PAYS ON LAST DATE OF EACH MONTH, DISPLAY FIRST SALARY DATE.
-> SELECT HIRE_DATE , LAST_DAY(ADD_MONTHS(HIRE_DATE,0)) "FIRST SALARY" FROM EMPLOYEES;

23. COMPANY PAYS ON 1ST DATE OF NEXT MONTH, DISPLAY FIRST SALARY DATE.
->SELECT HIRE_DATE , LAST_DAY(ADD_MONTHS(HIRE_DATE, 0))+1 "FIR_SAL_DATE" FROM EMPLOYEES;

24. COMPANY PAYS ON 1ST DATE OF NEXT MONTH, DISPLAY DATE OF LAST SALARY RECD.
->SELECT LAST_DAY(HIRE_DATE)  "LAST_SAL_DATE" FROM EMPLOYEES;

25. COMPANY PAYS ON FIRST THURSDAY OF NEXT MONTH. DISPLAY FIRST SALARY DATE WITH DAY NAME.
->SELECT NEXT_DAY(LAST_DAY(HIRE_DATE)+1,'THURSDAY') FIRST_THUS_SAL FROM EMPLOYEES;
ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-YY DAY';

26. COMPANY PAYS ON FIRST MONDAY OF NEXT MONTH. DISPLAY DATE OF LAST SALARY RECD.

27. COMPANY PAYS ON 7TH DATE OF NEXT MONTH, DISPLAY DATE OF LAST SALARY RECD.
->SELECT HIRE_DATE , ADD_MONTHS(LAST_DAY(HIRE_DATE)+7,-1) FROM EMPLOYEES;

28. COMPANY PAYS ON 7TH DATE OF NEXT MONTH, DISPLAY FIRST SALARY DATE WITH DAY NAME.
->SELECT ADD_MONTHS(LAST_DAY(HIRE_DATE)+7,1) FROM EMPLOYEES;

29. COMPANY PAYS ON SECOND WEDNESDAY OF NEXT MONTH. DISPLAY FIRST SALARY DATE WITH DAY NAME.
->SELECT NEXT_DAY(ADD_MONTHS(LAST_DAY(HIRE_DATE),1),'WEDNESDAY')+7 FROM EMPLOYEES;

30. COMPANY PAYS ON THIRD TUESDAY OF NEXT MONTH, DISPLAY DATE OF LAST SALARY RECD.
->SELECT FIRST_NAME , NEXT_DAY(LAST_DAY(HIRE_DATE)+1,'TUESDAY')+14 FROM EMPLOYEES;

31. COMPANY PAYS ON LAST SATURDAY OF CURRENT MONTH. DISPLAY FIRST SALARY DATE WITH DAY NAME.
->SELECT FIRST_NAME , NEXT_DAY(ADD_MONTHS(LAST_DAY(HIRE_DATE),1),'SATURDAY') -7 FROM EMPLOYEES;

32. COMPANY PAYS ON LAST FRIDAY OF CURRENT MONTH. DISPLAY DATE OF LAST SALARY RECD WITH DAY NAME.
->SELECT EMPLOYEE_ID , TO_CHAR(NEXT_DAY(LAST_DAY(TRUNC(HIRE_DATE,'MM'))-7,'FRIDAY'),'DD-MON-YY DAY') "LAST SAL" FROM EMPLOYEES;

33. DISPLAY FIRST_NAME , HIRE_DATE , TOTAL YEARS COMPLETED.
->SELECT FIRST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12) "TOTAL YEAR COM" FROM EMPLOYEES;

34. DISPLAY FIRST_NAME , HIRE_DATE , TOTAL MONTHS COMPLETED.
->SELECT FIRST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) MON_COM FROM EMPLOYEES;

35. DISPLAY LAST_NAME , HIRE_DATE , TOTAL DAYS COMPLETED.
-> SELECT LAST_NAME, HIRE_DATE, TRUNC(SYSDATE - HIRE_DATE) DAYS_COMPLETE FROM EMPLOYEES;

36. DISPLAY LAST_NAME , HIRE_DATE , TOTAL YEARS COMPLETED , EXTRA MONTHS COMPLETED.
->SELECT LAST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/ 12) TOTAL_SAL , MOD(MONTHS_BETWEEN(SYSDATE, HIRE_DATE), 12)
EXTRA_MONTHS FROM EMPLOYEES;

37. DISPLAY LAST_NAME , HIRE_DATE , TOTAL YEARS COMPLETED , EXTRA MONTHS COMPLETED , EXTRA DAYS COMPLETED.
->SELECT LAST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/12) TOTAL_YEARS , MOD(MONTHS_BETWEEN(SYSDATE,HIRE_DATE),12) MONTHS_COMP ,
TRUNC(SYSDATE - ADD_MONTHS(HIRE_DATE,TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)))) DAYS_COMP FROM EMPLOYEES;

38. DISPLAY LAST_NAME , HIRE_DATE , TOTAL WEEKS COMPLETED , TOTAL QUARTERS COMPLETED.
->SELECT LAST_NAME,HIRE_DATE,TRUNC((SYSDATE - HIRE_DATE)/7) WEEKS_COMP , TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/3) QUA_COMP
FROM EMPLOYEES;

39. DISPLAY LAST_NAME , HIRE_DATE , TOTAL QUARTERS COMPLETED , EXTRA WEEKS COMPLETED.
->SELECT LAST_NAME, HIRE_DATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 3) QUARTERS_COMP , MOD(TRUNC((SYSDATE - HIRE_DATE) / 7), 13) WEEKS_COMP
FROM EMPLOYEES;

40. DISPLAY LAST_NAME , HIRE_DATE , TOTAL QUARTERS COMPLETED , EXTRA WEEKS COMPLETED , EXTRA DAYS COMPLETED.
->SELECT LAST_NAME,HIRE_DATE,TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/3) QUA_COM , MOD(TRUNC((SYSDATE - HIRE_DATE)/7),13) WEEKS_COM ,
TRUNC(SYSDATE - ADD_MONTHS(HIRE_DATE,TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)))) DAYS_COMP FROM EMPLOYEES;

41. COMPANY MAKE EMPLOYEE PERMANENT AFTER 3 YEARS AND 3 QUARTERS OF JOINING DATE. DISPLAY FIRST_NAME , HIRE_DATE , PERMANENT_DATE.

42. COMPANY INCREMENTS ON 1ST APRIL AFTER COMPLETION OF 2 YEARS. DISPLAY LAST_NAME , FIRST_NAME , INCREMENT_DATE.

43. COMPANY PAYS FIRST SALARY ON 1ST DATE AFTER COMPLETION OF FIRST MONTH. DISPLAY FIRST_NAME , HIRE_DATE AND FIRST_SALARY_DATE.

44. IF HIRE DATE IS IN FIRST HALF OF MONTH, COMPANY PAYS ON NEXT MONTH'S FIRST DATE OTHER WISE NEXT TO NEXT MONTH'S FIRST DATE. DISPLAY LAST_NAME , HIRE_DATE AND FIRST_SALARY_DATE.

45. DISPLAY FIRST_NAME , HIRE_DATE AND NO. OF DAYS WORKED IN FIRST MONTH.

46. COMPANY PAYS ON EACH MONTH'S 7TH DATE. DISPLAY NEXT SALARY DATE.

47. DISPLAY FIRST_NAME , HIRE_DATE AND DAY NO. OF HIRE QUARTER.

48. DISPLAY LAST_NAME , HIRE_DATE AND DAY NO. OF HIRE YEAR.

49. DISPLAY FIRST_NAME , HIRE_DATE , NO. OF DAYS WORKED IN HIRED QUARTER AND NO. OF DAYS WORKED IN HIRE YEAR.
 
50. COMPANY DECLARES 20% BONUS ON YEARLY SALARY. EMPLOYEE WILL GET BONUS IN PROPORTION OF NO. OF DAYS WORKED IN HIRE YEAR. DISPLAY FIRST_NAME , HIRE_DATE , NO. OF DAYS WORKED IN HIRE YEAR, SALARY AND BONUS.





E   D   L    C    R  
SQL> SELECT * FROM EMPLOYEES;

EMPLOYEE_ID FIRST_NAME      LAST_NAME       EMAIL      PHONE_NUMBER         HIRE_DATE JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPARTMENT_ID
----------- --------------- --------------- ---------- -------------------- --------- ---------- ---------- -------------- ---------- -------------
        100 Steven          King            SKING      515.123.4567         17-JUL-87 AD_PRES         24000                                      90
        101 Neena           Kochhar         NKOCHHAR   515.123.4568         21-SEP-89 AD_VP           17000                       100            90
        102 Lex             De Haan         LDEHAAN    515.123.4569         13-JAN-93 AD_VP           17000                       100            90
        103 Alexander       Hunold          AHUNOLD    590.423.4567         03-JAN-90 IT_PROG          9000                       102            60
        104 Bruce           Ernst           BERNST     590.423.4568         21-MAY-91 IT_PROG          6000                       103            60
        107 Diana           Lorentz         DLORENTZ   590.423.5567         07-FEB-99 IT_PROG          4200                       103            60
        124 Kevin           Mourgos         KMOURGOS   650.123.5234         16-NOV-99 ST_MAN           5800                       100            50
        141 Trenna          Rajs            TRAJS      650.121.8009         17-OCT-95 ST_CLERK         3500                       124            50
        142 Curtis          Davies          CDAVIES    650.121.2994         29-JAN-97 ST_CLERK         3100                       124            50
        143 Randall         Matos           RMATOS     650.121.2874         15-MAR-98 ST_CLERK         2600                       124            50
        144 Peter           Vargas          PVARGAS    650.121.2004         09-JUL-98 ST_CLERK         2500                       124            50
        149 Eleni           Zlotkey         EZLOTKEY   011.44.1344.429018   29-JAN-00 SA_MAN          10500             .2        100            80
        174 Ellen           Abel            EABEL      011.44.1644.429267   11-MAY-96 SA_REP          11000             .3        149            80
        176 Jonathon        Taylor          JTAYLOR    011.44.1644.429265   24-MAR-98 SA_REP           8600             .3        149            80
        178 Kimerely        Grant           KGRANT     011.44.1644.429263   24-MAY-99 SA_REP           7000            .15        149
        200 Jennifer        Whalen          JWHALEN    515.123.4444         17-SEP-87 AD_ASST          4400                       101            10
        201 Michael         Hartstein       MHARTSTE   515.123.5555         17-FEB-96 MK_MAN          13000                       100            20
        202 Pat             Fay             PFAY       603.123.6666         17-AUG-97 MK_REP           6000                       201            20
        205 Shelley         Higgins         SHIGGINS   515.123.8080         07-JUN-94 AC_MGR          12000                       101           110
        206 William         Gietz           WGIETZ     515.123.8181         07-JUN-94 AC_ACCOUNT       8300                       205           110

20 rows selected.

SQL> SELECT * FROM DEPARTMENTS;

DEPARTMENT_ID DEPARTMENT_NAME                MANAGER_ID LOCATION_ID
------------- ------------------------------ ---------- -----------
           10 Administration                        200        1700
           20 Marketing                             201        1800
           50 Shiping                               124        1500
           60 IT                                    103        1400
           80 Sales                                 149        2500
           90 Executive                             100        1700
          110 Accounting                            205        1700
          190 Contracting                                      1700

8 rows selected.

SQL> SELECT * FROM LOCATIONS;

LOCATION_ID STREET_ADRESS                            POSTAL_CODE  CITY                           STATE_PROVINCE            CO
----------- ---------------------------------------- ------------ ------------------------------ ------------------------- --
       1400 2014 Jabberwocky Rd                      26192        Southlake                      Texas                     US
       1500 2011 Interiors Blvd                      99236        South San Francisco            California                US
       1700 2004 Charade Rd                          98199        Seattle                        Washington                US
       1800 460 Bloor St. W.                         ON M5S 1X8   Toronto                        Ontario                   CA
       2500 Magdalen Centre, The Oxford Science Park OX9 9ZB      Oxford                         Oxford                    UK

SQL> SELECT * FROM COUNTRIES;

CO COUNTRY_NAME                              REGION_ID
-- ---------------------------------------- ----------
CA Canada                                            2
DE Germany                                           1
UK United Kingdom                                    1
US United States of America                          2

SQL> SELECT * FROM REGIONS;

 REGION_ID REGION_NAME
---------- -------------------------
         1 Europe
         2 Americas
         3 Asia
         4 Middle East and Africa

SQL> SELECT * FROM JOBS;
 
JOB_ID     JOB_TITLE                           MIN_SALARY MAX_SALARY
---------- ----------------------------------- ---------- ----------
AD_PRES    President                                20000      40000
AD_VP      Administration Vice President            15000      30000
AD_ASST    Administration Assistant                  3000       6000
AC_MGR     Accounting Manager                        8200      16000
AC_ACCOUNT Public Accountant                         4200       9000
SA_MAN     Sales Manager                            10000      20000
SA_REP     Sales Representative                      6000      12000
ST_MAN     Stock Manager                             5500       8500
ST_CLERK   Stock Clerk                               2000       5000
IT_PROG    Programmer                                4000      10000
MK_MAN     Marketing Manager                         9000      15000
MK_REP     Marketing Representative                  4000       9000


SQL> SELECT * FROM JOB_GRADES;

GRA LOWEST_SAL HIGHEST_SAL
--- ---------- -----------
A         1000        2999
B         3000        5999
C         6000        9999
D        10000       14999
E        15000       24999
F        25000       40000      

SQL> SELECT * FROM JOB_HISTORY;

EMPLOYEE_ID START_DAT END_DATE  JOB_ID     DEPARTMENT_ID
----------- --------- --------- ---------- -------------
        102 13-JAN-93 24-JUL-98 IT_PROG               60
        101 21-SEP-89 27-OCT-93 AC_ACCOUNT           110
        101 28-OCT-93 15-MAR-97 AC_MGR               110
        201 17-FEB-96 19-DEC-99 MK_REP                20
        114 24-MAR-98 31-DEC-99 ST_CLERK              50
        122 01-JAN-99 31-DEC-99 ST_CLERK              50
        200 17-SEP-87 17-JUN-93 AD_ASST               90
        176 24-MAR-98 31-DEC-98 SA_REP                80
        176 01-JAN-99 31-DEC-99 SA_MAN                80
        200 01-JUL-94 31-DEC-98 AC_ACCOUNT            90