1. DISPLAY FIRST_NAME , LAST_NAME , OTHER COLUMN. IT SHOULD DISPLAY SMALL CASE DATA OF COLUMN WHICH HAS SMALLER SPELLING AND ALL EXTRA CHARACTERS OF LONGER 
SPELLING USING CAPITAL ALPHABETS. IF LENGTH OF BOTH ARE EQUAL, IT SHOULD DISPLAY NULL. (CHAPTER 4)

2. DISPLAY HIRE_DATE AND ANOTHER COLUMN. IF DATE FALLS IN FIRST QUARTER THE ABBREVIATED MONTH NAME SHOULD BE DISPLAYED IN SMALL CASE. IF DATE FALLS IN SECOND QUARTER THE ABBREVIATED MONTH NAME SHOULD BE DISPLAYED IN CAMEL CASE. IF DATE FALLS IN 3rd QUARTER IT SHOULD DISPLAY FULL MONTHS IN LOWER CASE OTHER WISE FULL MONTH NAME IN UPPER CASE. (CHAPTER 4)
select hire_date,
CASE WHEN TO_CHAR(hire_Date,'Q')='1' THEN LOWER(TO_CHAR(hire_date,'MON'))
WHEN TO_CHAR(hire_date,'Q')='2' THEN INITCAP(TO_CHAR(hire_date,'MON'))
WHEN TO_CHAR(hire_date,'Q')='3' THEN LOWER(TO_CHAR(hire_date,'MON')) 
ELSE UPPER(TO_CHAR(hire_date,'MONTH')) END "MONTH" from employees order by 2;
3. DISPLAY FIRST_NAME , LAST_NAME AND OTHER COLUMN. IT SHOULD DISPLAY EITHER FIRST_NAME OR LAST_NAME WHICH HAS HIGHER COUNT OF VOWELS. (CHAPTER 4)
SELECT FIRST_NAME,LAST_NAME,
TRANSLATE(LOWER(first_name),'#qwrtypsdflgkhjzmxncbv','#') "FIRST_NAME_VOWLS",TRANSLATE(LOWER(last_name),'#qwrtypsdflgkhjzmxncbv ','#') "LAST_NAME_VOWELS",
CASE WHEN LENGTH(TRANSLATE(LOWER(first_name),'#qwrtypsdflgkhjzmxncbv','#')) > LENGTH(TRANSLATE(LOWER(last_name),'#qwrtypsdflgkhjzmxncbv','#')) THEN FIRST_NAME ELSE LAST_NAME END "COL"
from employees;

4. DISPLAY FIRST_NAME AND PART OF IT AS SECOND COLUMN. IT SHOULD START WITH FIRST VOWEL AND END ON LAST VOWEL IF IT HAS MORE THAN ONE. (CHAPTER 4)
SELECT FIRST_NAME,
CASE WHEN LENGTH(TRANSLATE(lower(first_name),'#qwrtypsdlfkgjhzxmcnvb','#')) > 1 THEN TRANSLATE(lower(first_name),'#qwrtypsdlfkgjhzxmcnvb','#') ELSE '' END "VOWEL" 
FROM EMPLOYEES;

////5. DISPLAY HIRE_DATE IN SPECIFIED FORMAT 20.January.2001 Tuesday (DON'T USE ALTER SESSION). SORT RESULT ON WEEK OF YEAR.
SELECT HIRE_DATE,TO_CHAR(hire_date,'DD.MON.RRRR DAY'),CEIL(TO_NUMBER((hire_Date,'YY' - hire_date)/7) FROM EMPLOYEES;


6. DISPLAY SALARY IN SPECIFIED FORMAT : Rupees Twenty-Four Thousand Only
-> SELECT 'Rupees ' || INITCAP(TO_CHAR(TO_DATE(SALARY,'JSP'),'JSP')) || ' Only ' FROM EMPLOYEES;

7. DISPLAY Today is 263rd day of year 2021.


8. DISPLAY We are in third week of June and twenty-sixth week of two thousand twenty-one. (FOR TODAY'S DATE)
SELECT 'We are in ' || To_CHAR(TO_DATE(TO_CHAR(sysdate,'W'),'jsp'),'jsp') || ' week of ' || TO_CHAR(sysdate,'MONTH') || 
TO_CHAR(TO_DATE(CEIL((SYSDATE- TRUNC(sysdate,'RR'))/7),'jsp'),'jsp') || ' week of ' || TO_CHAR(TO_DATE(TO_CHAR(sysdate,'RRRR'),'jsp'),'jsp')   from employees; 
9. DISPLAY Current month September falls in 3rd quarter of year. (FOR TODAY'S DATE)


10. DISPLAY Current time is 09 hours, 26 minutes and 52 seconds. (FOR TIME AS OF NOW)
SELECT TO_CHAR(hire_Date,'HH') || ' hours, ' || TO_CHAR(hire_date,'MM') || ' minutes and ' || TO_CHAR(hire_date,'SS') || ' seconds.' from employees;
11. DISPLAY SALARY IN SPECIFIED FORMAT : @24~000!00+ (DON'T USE ALTER SESSION)
select salary,'@' || SUBSTR(salary,1,length(salary)-3) || '~' || LPAD(substr(salary,-3),3,'0') || '!00+'from employees;

12. DISPLAY -12345.67 VALUE IN SPECIFIED FORMAT : {12:345;67} (DON'T USE ALTER SESSION)
select '{' || translate(SUBSTR(ABS(-12345.67),1,2) || ':' || substr(ABS(-12345.67),3),'.',';') || '}' from dual;

13. DISPLAY FIRST_NAME , LAST_NAME , FIRST VOWEL OF FIRST_NAME , LAST VOWEL OF LAST_NAME , SAME or DIFFERENT BASED OF VOWELS COMPARISON.
select first_name,last_name,SUBSTR(TRANSLATE(LOWER(first_name),'#qwrtypsdlfkgjhzmxncbv','#'),1,1) "FIRST_VOWEL",
SUBSTR(TRANSLATE(LOWER(last_name),'#qwrtypsdlfkgjhzmxncbv','#'),-1) "LAST_NM_VOWEL", NVL2(
NULLIF(SUBSTR(TRANSLATE(LOWER(first_name),'#qwrtypsdlfkgjhzmxncbv','#'),1,1),SUBSTR(TRANSLATE(LOWER(last_name),'#qwrtypsdlfkgjhzmxncbv','#'),-1)),'DIFFERENT','SAME') "COMPARISION" from employees;

14. DISPLAY SALARY , LSALARY (BY REMOVING ALL OCCURRENCES OF 12350 FROM LEFT), NEWLSALARY (DISPLAY WORD 'NULL' IF LSALARY COLUMN HAS NULL VALUE.)
SELECT SALARY,LTRIM(SALARY,'12350'),NVL(LTRIM(SALARY,'12350'),'NULL') from employees;

15. DISPLAY FIRST_NAME , SALARY , DATE_YEAR = ONLY DATE AND YEAR VALUE FROM HIRE_DATE (DON'T USE SUBSTR FUNCTION). DISPLAY ONLY THOSE ROWS WHICH FINDS ANY DIGIT OF DATE_YEAR COLUMN IN SALARY COLUMN.
SELECT FIRST_NAME,SALARY,(TO_CHAR(HIRE_DATE,'DD') || TO_CHAR(hire_date,'RRRR')) "DATE_YEAR" from employees where LENGTH(SALARY) >LENGTH(TRANSLATE(TO_CHAR(salary),(TO_CHAR(HIRE_DATE,'DD') || TO_CHAR(hire_date,'RRRR')),'#'));	

16. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. INCREMENT IS LIKE THIS : IF HIRED IN JUN OR YEAR 98 THEN 1500. IF HIRED IN JAN OR YEAR 99 THEN 2000. IF HIRED IN JUL OR ANY OF THE YEAR 90,92 OR 94 THEN 1000.

17. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. INCREMENT IS ON THE BASES OF QUARTER IN WHICH EMPLOYEE WAS HIRED. FOR Q1 500, FOR Q2 1500 , FOR Q3 2000 AND FOR REMAINING 1000.	

18. DISPLAY FIRST_NAME , LAST_NAME , IF BOTH HAS SAME NO. OF VOWELS DISPLAY 'SAME' ELSE DISPLAY 'NOT SAME'.

19. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF FIRST ALPHABET OF MONTH NAME IS 'M' 20%, IF SECOND ALPHABET IS 'E' 30%, IF THIRD CHARACTER IS 'N' 40%, NO INCREMENT TO OTHERS.

20. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN FIRST WEEK OF MONTH 10%, 2nd WEEK 20% ... 5th WEEK 50%.

21. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN FIRST SIX MONTHS OF YEAR 20% ELSE 30%.

22. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN EVEN WEEK OF YEAR 20% OTHERWISE 10%.

23. DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF QUARTER ELSE 'SECOND'. (USING CASE)
