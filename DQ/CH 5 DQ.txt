1. DISPLAY NO. OF EMPLOYEES WHO DOESN'T GET COMMISSION. (DON'T USE SPECIAL OPERATOR)
->SELECT COUNT(*) FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL ;

2. DISPLAY HIRE YEAR WISE LOWEST AND HIGHEST SALARY FIGURES. SORT THE RESULT ON HIRE YEAR.
SELECT TO_CHAR(HIRE_DATE,'YYYY'),MIN(SALARY),MAX(SALARY)
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
ORDER BY TO_CHAR(HIRE_DATE,'YYYY');

->SELECT MIN(SALARY) , MAX(SALARY) , TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES 
GROUP BY TO_CHAR(HIRE_DATE,'RRRR') ORDER BY TO_CHAR(HIRE_DATE,'RRRR');

3. DISPLAY HIRE QUARTER WISE (IGNORE YEAR) AVERAGE AND TOTAL SALARY FIGURES FOR THOSE WHO WERE HIRED BEFORE YEAR 2000. RESULT 
-> SELECT TO_CHAR(HIRE_DATE,'Q') ,AVG(SALARY),SUM(SALARY)
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'YYYY') < 2000
GROUP BY TO_CHAR(HIRE_DATE,'Q')
ORDER BY TO_CHAR(HIRE_DATE , 'Q');

4. DISPLAY YEAR WISE , JOB_ID WISE NO. OF EMPLOYEES WORKING. DON'T INCLUDE WHO GETS SALARY HIGHER THAN 9999.
SELECT TO_CHAR(HIRE_DATE,'YYYY'), JOB_ID , COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE SALARY <= 9999
GROUP BY TO_CHAR(HIRE_DATE,'YYYY'), JOB_ID
ORDER BY 1,2;

5. DISPLAY HIRE MONTH WISE NO. OF EMPLOYEES. INCLUDE ONLY THOSE WHO WERE HIRED IN 1st OR 3rd QUARTER OF ANY YEAR.
SELECT TO_CHAR(HIRE_DATE , 'MM') , COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE , 'Q') = SOME ('1','3')
GROUP BY TO_CHAR(HIRE_DATE , 'MM')
ORDER BY TO_CHAR(HIRE_DATE , 'MM');

6. DISPLAY MANAGER_ID WISE TOTAL SALARY. INCLUDE ONLY THOSE WHO WERE HIRED IN EVEN YEARS. EXCLUDE THOSE WHOSE FIRST_NAME SPELLING HAS ALPHABET 'o'. SORT THE RESULT ON TOTAL SALARY COLUMN.
SELECT MANAGER_ID , SUM(SALARY) FROM EMPLOYEES
WHERE MOD(TO_CHAR(HIRE_DATE , 'YYYY'),2)=0 AND  INSTR(UPPER(LAST_NAME),'O')=0
GROUP BY MANAGER_ID
ORDER BY 2;

7. DISPLAY JOB_ID WISE NO. OF EMPLOYEES. INCLUDE THOSE WHO WORKS IN DEPARTMENT 50,90,60,80 (DON'T USE SPECIAL OPERATOR). EXCLUDE THOSE WHO REPORTS TO MANAGER 100,124,149 (DON'T USE MULTI ROW OPERATOR).
SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES
WHERE (DEPARTMENT_ID=60 OR DEPARTMENT_ID=90 OR DEPARTMENT_ID=50 OR DEPARTMENT_ID=80) AND
(MANAGER_ID != 100 AND MANAGER_ID != 124 AND MANAGER_ID != 149)
GROUP BY JOB_ID;

8. DISPLAY DEPARTMENT_ID AND DATE ON WHICH LAST EMPLOYEE WAS HIRED FOR THE DEPARTMENT. EXCLUDE THOSE WHO GETS COMMISSION.
SELECT DEPARTMENT_ID , MAX(HIRE_DATE)
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL
GROUP BY DEPARTMENT_ID ;

9. DISPLAY JOB_ID AND DATE ON WHICH FIRST EMPLOYEES WAS HIRED FOR THE JOB. EMPLOYEE SHOULD NOT BE HIRED BETWEEN YEAR 92 AND 96 AND MUST REPORT TO MANAGER 100,124 OR 149.
 SELECT JOB_ID , MIN(HIRE_DATE) FROM EMPLOYEES
 WHERE TO_CHAR(HIRE_DATE , 'YYYY') NOT BETWEEN '1992' AND '1996'
 AND MANAGER_ID = ANY(100,124,149)
 GROUP BY JOB_ID;

SELECT JOB_ID, MIN(HIRE_DATE)
FROM EMPLOYEES
WHERE 
  (TO_NUMBER(TO_CHAR(HIRE_DATE, 'YYYY')) < 1992 OR TO_NUMBER(TO_CHAR(HIRE_DATE, 'YYYY')) > 1996)
  AND 
  (MANAGER_ID = 100 OR MANAGER_ID = 124 OR MANAGER_ID = 149)
GROUP BY JOB_ID;


10. DISPLAY MANAGER_ID WISE LOWEST AND HIGHEST SALARY. EXCLUDE THOSE ROWS WHICH HAS HIGHEST SALARY LOWER THAN 10000.
SELECT MANAGER_ID , MIN(SALARY) , MAX(SALARY)
FROM EMPLOYEES
GROUP BY MANAGER_ID
HAVING MAX(SALARY)>=10000 ;

11. DISPLAY JOB_ID WISE NO. OF EMPLOYEES. EXCLUDE THOSE WHO GETS COMMISSION. EXCLUDE THOSE WHOSE MANAGER OR DEPARTMENT IS YET NOT FIXED. DISPLAY ONLY THOSE JOBS FOR WHICH MORE THAN 1 EMPLOYEES ARE WORKING.
SELECT JOB_ID , COUNT(EMPLOYEE_ID) FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL AND MANAGER_ID IS NOT NULL AND DEPARTMENT_ID IS NOT NULL
GROUP BY JOB_ID
HAVING COUNT(EMPLOYEE_ID)>1;

12. DISPLAY MANAGER_ID WISE AVERAGE SALARY. 
INCLUDE THOSE WHO WERE HIRED IN ODD QUARTER FOR DEPARTMENT 90,110,60 OR WHO REPORTS TO 100, 124 OR 149 
AND HIRED IN SECOND HALF OF YEAR. DISPLAY ONLY THOSE WHOSE AVERAGE SALARY IS HIGHER THAN 9000. 
SORT RESULT ON FIRST COLUMN KEEPING NULLS AT THE TOP.

SELECT MANAGER_ID , AVG(SALARY)
FROM EMPLOYEES
WHERE (TO_CHAR(HIRE_DATE,'Q')=ANY(1,3) AND DEPARTMENT_ID = SOME (90,110,60)) OR 
(MANAGER_ID= ANY (100,124,149) AND TO_CHAR(HIRE_DATE,'Q')IN(2,4))
GROUP BY MANAGER_ID
HAVING AVG(SALARY)>9000 
ORDER BY 1 NULLS FIRST;

13. DISPLAY DEPARTMENT_ID WISE LOWEST MAXIMUM SALARY AND HIGHEST MINIMUM SALARY.
SELECT MIN(MAX(SALARY)) , MAX(MIN(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

14. DISPLAY JOB_ID WISE HIGHEST NO. OF EMPLOYEES AND LOWEST NO. OF EMPLOYEES.
SELECT MAX(COUNT(EMPLOYEE_ID)) , MIN(COUNT(EMPLOYEE_ID)) FROM EMPLOYEES GROUP BY JOB_ID;

15. DISPLAY DEPARTMENT_ID WISE , MANAGER_ID WISE NO. OF EMPLOYEES WORKING. DISPLAY ONLY THOSE GROUPS WHOSE LOWEST SALARY IS HIGHER THAN 6000.
 SELECT DEPARTMENT_ID , MANAGER_ID , COUNT(EMPLOYEE_ID)
 FROM EMPLOYEES
 GROUP BY  DEPARTMENT_ID , MANAGER_ID
 HAVING MIN(SALARY)>6000;

16. DISPLAY COUNT OF EMPLOYEES DEPARTMENT WISE FOR DEPARTMENT 50,90,110,10. (CROSS TAB REPORT)
SELECT COUNT(DECODE (DEPARTMENT_ID , 50 , EMPLOYEE_ID) ) CNT_EMP_DEP_50,
       COUNT(DECODE (DEPARTMENT_ID , 90 , EMPLOYEE_ID) ) CNT_EMP_DEP_90,
       COUNT(DECODE (DEPARTMENT_ID , 110 , EMPLOYEE_ID) ) CNT_EMP_DEP_110,
       COUNT(DECODE (DEPARTMENT_ID , 10 , EMPLOYEE_ID) ) CNT_EMP_DEP_10
FROM EMPLOYEES;

SELECT COUNT(CASE DEPARTMENT_ID WHEN 50 THEN SALARY END ) CNT_EMP_DEP_50,
       COUNT(CASE DEPARTMENT_ID WHEN 90 THEN SALARY END ) CNT_EMP_DEP_90,
       COUNT(CASE DEPARTMENT_ID WHEN 110 THEN SALARY END ) CNT_EMP_DEP_110,
       COUNT(CASE DEPARTMENT_ID WHEN 10 THEN SALARY END ) CNT_EMP_DEP_10
FROM EMPLOYEES;

17. DISPLAY TOTAL OF SALARY, JOB_ID WISE FOR JOBS OTHER THAN AC_ACCOUNT, AC_MGR , ST_CLERK , SA_REP, SA_MAN , MK_REP , MK_MAN. (MATRIX REPORT)


18. DISPLAY DEPARTMENT_ID WISE HIGHEST SALARY FOR IT_PROG, LOWEST SALARY FOR ST_CLERK, AVERAGE SALARY FOR SA_REP. (PIVOTE REPORT)
SELECT DEPARTMENT_ID , 
MAX(DECODE(JOB_ID,'IT_PROG',SALARY)) MAX_SAL_IT_PROG , 
MIN(DECODE(JOB_ID,'ST_CLERK',SALARY)) MIN_SAL_ST_CLERK , 
AVG(DECODE(JOB_ID,'SA_REP',SALARY))  AVG_SAL_SA_REP
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID;

19. DISPLAY YEAR WISE COUNT OF EMPLOYEES FOR EACH QUARTER WITH COLUMN ALIAS Q1_CNT , Q2_CNT ETC. (MATRIX REPORT)
 SELECT COUNT(CASE TO_CHAR(HIRE_DATE , 'Q') WHEN '1' THEN EMPLOYEE_ID END) HQ_1_CNT ,
         COUNT(CASE TO_CHAR(HIRE_DATE , 'Q') WHEN '2' THEN EMPLOYEE_ID END) HQ_2_CNT ,
         COUNT(CASE TO_CHAR(HIRE_DATE , 'Q') WHEN '3' THEN EMPLOYEE_ID END) HQ_3_CNT ,
         COUNT(CASE TO_CHAR(HIRE_DATE , 'Q') WHEN '4' THEN EMPLOYEE_ID END ) HQ_4_CNT
  FROM EMPLOYEES;

20 DISPLAY DEPARTMENT_ID WISE , MANAGER_ID WISE , Q1_MIN_SAL , Q2_AVG_SAL, Q3_MAX_SAL AND Q4_SUM_SAL. (CROSS TAB REPORT). 
SORT THE RESULT IN DESCENDING ORDER OF 1st AND 2nd COLUMNS.

SELECT DEPARTMENT_ID , MANAGER_ID
, MIN(DECODE(TO_CHAR(HIRE_DATE , 'Q' ),'1',SALARY)) Q1_MIN_SAL ,
AVG(DECODE(TO_CHAR(HIRE_DATE , 'Q'),'2' , SALARY)) Q2_AVG_SAL ,
MAX(DECODE(TO_CHAR(HIRE_DATE , 'Q'),'3' , SALARY)) Q3_MAX_SAL ,
SUM(DECODE(TO_CHAR(HIRE_DATE , 'Q'),'4' , SALARY)) Q4_SUM_SAL
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID , MANAGER_ID
ORDER BY 1 DESC , 2 ;