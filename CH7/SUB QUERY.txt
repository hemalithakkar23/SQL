SUB QUERY

1. SELECT FIRST_NAME , MANAGER_ID , SALARY
 FROM EMPLOYEES
 WHERE MANAGER_ID = 149 AND SALARY >
 (SELECT AVG(SALARY) FROM EMPLOYEES);

2.SELECT FIRST_NAME , MANAGER_ID , SALARY
FROM EMPLOYEES
WHERE SALARY <
(SELECT AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 60);

3.SELECT FIRST_NAME , MANAGER_ID , SALARY , DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 20 AND SALARY >
(SELECT AVG(SALARY) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')='1999');

4.
 SELECT FIRST_NAME , MANAGER_ID , SALARY , DEPARTMENT_ID , HIRE_DATE
 FROM EMPLOYEES
 WHERE TO_CHAR(HIRE_DATE,'Q') IN (1,3) AND SALARY >
 (SELECT AVG(SALARY) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'Q') IN (2,4));

5.
SELECT FIRST_NAME , LENGTH(FIRST_NAME) , MANAGER_ID , SALARY , DEPARTMENT_ID , HIRE_DATE
FROM EMPLOYEES WHERE MOD(LENGTH(FIRST_NAME),2)=0;




REM 1 DISPLAY THOSE WHO GET HIGHEST SALARY FOR THEIR JOB
SELECT FIRST_NAME , JOB_ID , SALARY
FROM EMPLOYEES
WHERE (NVL(JOB_ID,0),SALARY) IN (SELECT NVL(JOB_ID,0),MAX(SALARY) FROM EMPLOYEES GROUP BY JOB_ID);

REM 2 DISPALY ALL EXCEPT THOSE WHO GET LOWEST SALARY FOR THEIR MANAGER
SELECT FIRST_NAME , SALARY , MANAGER_ID
FROM EMPLOYEES
WHERE (NVL(MANAGER_ID,0),SALARY) NOT IN (SELECT NVL(MANAGER_ID,0),MIN(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID);


REM 3 DISPLAY THOSE WHO WERE HIRED EITHER FIRST OR LAST FOR THEIR DEPARTMENT_ID
 SELECT FIRST_NAME , HIRE_DATE , DEPARTMENT_ID
 FROM EMPLOYEES
 WHERE (HIRE_DATE , DEPARTMENT_ID ) IN (SELECT MAX(HIRE_DATE),DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

 SELECT FIRST_NAME , HIRE_DATE , DEPARTMENT_ID
 FROM EMPLOYEES
 WHERE (HIRE_DATE , DEPARTMENT_ID ) IN (SELECT MIN(HIRE_DATE),DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID);



REM 4 DISPLAY ALL EXCEPT THOSE WHO GETS EITHER LOWEST OR HIGHEST COMMISSION A M O U N T FOR THEIR MANAGER_ID. (WRONG)

 SELECT FIRST_NAME , COMMISSION_PCT , MANAGER_ID
 FROM EMPLOYEES
 WHERE (COMMISSION_PCT,MANAGER_ID) IN (SELECT MAX(COMMISSION_PCT),MANAGER_ID FROM EMPLOYEES GROUP BY MANAGER_ID) AND
(COMMISSION_PCT,MANAGER_ID) IN (SELECT MIN(COMMISSION_PCT),MANAGER_ID FROM EMPLOYEES GROUP BY MANAGER_ID)
;

REM 1 DISPLAY THOSE WHO GETS LOWER SALARY THAN ANY SA_REP
SELECT FIRST_NAME, SALARY,JOB_ID
FROM EMPLOYEES
WHERE SALARY < (SELECT MIN(SALARY) FROM EMPLOYEES WHERE JOB_ID='SA_REP');

SELECT FIRST_NAME, SALARY,JOB_ID
FROM EMPLOYEES
WHERE SALARY <ANY (SELECT SALARY FROM EMPLOYEES WHERE JOB_ID='SA_REP');

REM 2 DISPLAY THOSE WHO GETS HIGHER SALARY THAN ALL EMPLOYEES BELONGS TO DEPARTMENT 20

SELECT FIRST_NAME , SALARY , DEPARTMENT_ID
FROM EMPLOYEES
WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID=20);

 SELECT FIRST_NAME , SALARY , DEPARTMENT_ID
 FROM EMPLOYEES
 WHERE SALARY >ANY (SELECT SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID=20);

REM 3 DISPLAY ALL WHO GET HIGHER SALARY THAN ANY WHO REPORTS TO MANAGER 103

SELECT FIRST_NAME , SALARY , MANAGER_ID
FROM EMPLOYEES
WHERE SALARY > ( SELECT MAX(SALARY) FROM EMPLOYEES WHERE MANAGER_ID = 103);


SELECT FIRST_NAME , SALARY , MANAGER_ID
FROM EMPLOYEES
WHERE SALARY >ANY ( SELECT SALARY FROM EMPLOYEES WHERE MANAGER_ID = 103);

REM 4 DISPLAY ALL WHO GETS LOWER SALARY THAN ALL WHO WERE HIRED IN YEAR 99

 SELECT FIRST_NAME , SALARY FROM EMPLOYEES
 WHERE SALARY < (SELECT MIN(SALARY) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')='1999');

 SELECT FIRST_NAME , SALARY FROM EMPLOYEES
 WHERE SALARY <ANY (SELECT SALARY FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')='1999');





1.SELECT FIRST_NAME ,HIRE_DATE FROM EMPLOYEES
WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES
WHERE LAST_NAME = 'Hartstein');

2.SELECT FIRST_NAME , SALARY FROM EMPLOYEES
WHERE SALARY <
(SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Lorentz');

3.SELECT FIRST_NAME ,NVL(COMMISSION_PCT*SALARY,0) COM_AMOUNT
FROM EMPLOYEES
WHERE NVL(COMMISSION_PCT*SALARY,0) >
(SELECT NVL(COMMISSION_PCT*SALARY,0) FROM EMPLOYEES
WHERE LAST_NAME = 'Taylor');

4.SELECT FIRST_NAME , MANAGER_ID
FROM EMPLOYEES WHERE MANAGER_ID =
(SELECT EMPLOYEE_ID FROM EMPLOYEES
WHERE FIRST_NAME = 'Grant');

5.SELECT FIRST_NAME , MANAGER_ID
FROM EMPLOYEES WHERE MANAGER_ID =
(SELECT EMPLOYEE_ID FROM EMPLOYEES
WHERE FIRST_NAME = 'Alexander');




REM 1 DISPLAY MANAGER_ID AND TOTAL SALARY PAID FOR THE MANGER TO WHICH LOWEST TOTAL SALARY IS PAID
 SELECT MANAGER_ID , SUM(SALARY)  FROM EMPLOYEES GROUP BY MANAGER_ID
 HAVING SUM(SALARY) =
 (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);


REM 2 DISPLAY JOB_ID AND COUNT OF EMPLOYEES FOR THE JOB FOR WHICH HIGHEST EMPLOYEES WORK
SELECT JOB_ID , COUNT(FIRST_NAME) FROM EMPLOYEES GROUP BY JOB_ID
HAVING COUNT(FIRST_NAME)=
(SELECT MAX(COUNT(FIRST_NAME)) FROM EMPLOYEES GROUP BY JOB_ID);

REM 3 DISPLAY DEPARTMENT_ID AND AVERAGE SALARY FOR THE DEPARTMENT TO WHICH EITHER LOWEST AVERAGE SALARY OF HIGHEST AVERAGE SALARY IS PAID
SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID) OR
 AVG(SALARY) = (SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID) ;

REM 4 DISPLAY MANAGER_ID AND AVERAGE SALARY FOR ALL EXCEPT MANAGER TO WHICH HIGHEST AVERAGE SALARY IS PAID
SELECT MANAGER_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID
HAVING AVG(SALARY) !=
(SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);


REM 5 DISPLAY JOB_ID AND TOTAL SALARY FOR ALL THE JOBS EXCEPT THOSE TO WHICH HIGHEST OR LOWEST TOTAL SALARY IS PAID

 SELECT JOB_ID , SUM(SALARY) FROM EMPLOYEES
 GROUP BY JOB_ID
 HAVING SUM(SALARY) !=
 (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID) OR
 (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID) ;



REM 1 DISPLAY LAST_NAME , JOB_ID , SALARY , JOB MINIMUM SALARY (WITHOUT USING COLUMN ALIAS)
SELECT LAST_NAME , JOB_ID , SALARY , "MIN(SALARY)"
FROM EMPLOYEES NATURAL JOIN
(SELECT JOB_ID , MIN(SALARY) FROM EMPLOYEES GROUP BY JOB_ID);

REM 2 DISPLAY FIRST_NAME , MANAGER_ID , SALARY , MANAGER_ID HIGHEST SALARY (USING CASE INSENSITIVE COLUMN ALIAS)
SELECT FIRST_NAME , MANAGER_ID , SALARY , hig_SALARY
FROM EMPLOYEES
NATURAL JOIN
(SELECT MANAGER_ID , MAX(SALARY) HIG_SALARY FROM EMPLOYEES GROUP BY MANAGER_ID);

REM 3 DISPLAY FULL NAME , DEPARTMENT_ID , SALARY, DEPT_Min_salary , dept_maX_SALARY  ( USING CASE SENSITIVE COLUMN ALIASES )
SELECT FIRST_NAME ||' '|| LAST_NAME "FULL NAME" , DEPARTMENT_ID , SALARY, "DEPT_Min_salary" , "dept_maX_SALARY"
FROM EMPLOYEES
NATURAL JOIN
(SELECT  DEPARTMENT_ID , MIN(SALARY) "DEPT_Min_salary" , MAX(SALARY) "dept_maX_SALARY" FROM EMPLOYEES GROUP BY DEPARTMENT_ID);




hidden query ++
REM 1 FIRST_NAME , DEPARTMENT_ID , SALARY, DEPARTMENT MINIMUM SALARY (NJ , WITHOUT COLUMN ALIAS)
SELECT FIRST_NAME , DEPARTMENT_ID , SALARY, "MIN(SALARY)"
FROM EMPLOYEES
 NATURAL JOIN
(SELECT DEPARTMENT_ID , MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

REM 2 LAST_NAME , JOB_ID , SALARY, JOB MAXIMUM SALARY (IJU , USE CASE INSENSITIVE COLUMN ALIAS)
 SELECT  LAST_NAME , JOB_ID , SALARY, JOB_MAXIMUM_SALARY
 FROM EMPLOYEES
 INNER JOIN
 (SELECT JOB_ID , MAX(SALARY)  JOb_MAXIMUm_SALARY FROM EMPLOYEES GROUP BY JOB_ID)
 USING(JOB_ID);


REM 3 FULL_NAME , MANAGER_ID , SALARY, MGR SUM SALARY (IJO , USE CASE SENSITIVE COLUMN ALIAS)
SELECT FIRST_NAME || ' ' || LAST_NAME "FULL_NAME" ,E.MANAGER_ID , SALARY , "SUM_SAL"
FROM EMPLOYEES E
INNER JOIN
(SELECT MANAGER_ID , SUM(SALARY) "SUM_SAL" FROM EMPLOYEES GROUP BY MANAGER_ID ) M
ON (E.MANAGER_ID = M.MANAGER_ID);



REM 1 FIRST_NAME , DEPARTMENT_ID , SALARY , DEPT_MIN_SAL , SALARY_DIFF   (NJ , WITHOUT ALIAS)
 SELECT FIRST_NAME , DEPARTMENT_ID , SALARY , "MIN(SALARY)" , SALARY - "MIN(SALARY)" "SALARY_DIFF"
 FROM EMPLOYEES
NATURAL JOIN
(SELECT DEPARTMENT_ID , MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID );


REM 2 LAST_NAME , JOB_ID , SALARY , JOB_AVG_SAL , SALARY_DIFF   (IJU , CASE INSENSITIVE ALIAS)
SELECT LAST_NAME , JOB_ID , SALARY , "JOB_AVG_SAL" , SALARY - "JOB_AVG_SAL"  SALARY_DIFF
FROM EMPLOYEES
INNER JOIN
(SELECT JOB_ID , AVG(SALARY) JOb_AVg_sAL FROM EMPLOYEES GROUP BY JOB_ID) USING(JOB_ID);

REM 3 FULL_NAME , MANAGER_ID , SALARY , MGR_SUM_SAL , "% OF MGR SUM SAL" (IJO , CASE SENSITIVE ALIAS)

 SELECT FIRST_NAME || ' '||LAST_NAME ,  E.MANAGER_ID , SALARY , "MGR_SUM_SAL" , CONCAT(TO_CHAR((SALARY*100)/"MGR_SUM_SAL",'999.99'),'%')  "% OF MGR SUM SAL"
 FROM EMPLOYEES E
 INNER JOIN
 (SELECT MANAGER_ID , SUM(SALARY) "MGR_SUM_SAL" FROM EMPLOYEES GROUP BY MANAGER_ID) M
 ON (E.MANAGER_ID = M.MANAGER_ID);
